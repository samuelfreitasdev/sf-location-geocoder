/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records


import org.jooq.JSON
import org.jooq.Record1
import org.jooq.generated.tables.GeocoderProblem
import org.jooq.impl.UpdatableRecordImpl
import java.time.Instant


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GeocoderProblemRecord private constructor() : UpdatableRecordImpl<GeocoderProblemRecord>(GeocoderProblem.GEOCODER_PROBLEM) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var name: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var points: JSON
        set(value): Unit = set(2, value)
        get(): JSON = get(2) as JSON

    open var createdAt: Instant
        set(value): Unit = set(3, value)
        get(): Instant = get(3) as Instant

    open var updatedAt: Instant
        set(value): Unit = set(4, value)
        get(): Instant = get(4) as Instant

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised GeocoderProblemRecord
     */
    constructor(id: Long? = null, name: String, points: JSON, createdAt: Instant, updatedAt: Instant): this() {
        this.id = id
        this.name = name
        this.points = points
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetChangedOnNotNull()
    }
}
