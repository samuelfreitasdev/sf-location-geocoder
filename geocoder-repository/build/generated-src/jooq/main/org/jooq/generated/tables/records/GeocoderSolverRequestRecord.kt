/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records


import org.jooq.Record1
import org.jooq.generated.tables.GeocoderSolverRequest
import org.jooq.impl.UpdatableRecordImpl
import java.time.Instant
import java.util.*


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class GeocoderSolverRequestRecord private constructor() : UpdatableRecordImpl<GeocoderSolverRequestRecord>(GeocoderSolverRequest.GEOCODER_SOLVER_REQUEST) {

    open var requestKey: UUID
        set(value): Unit = set(0, value)
        get(): UUID = get(0) as UUID

    open var problemId: Long
        set(value): Unit = set(1, value)
        get(): Long = get(1) as Long

    open var solver: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var status: String
        set(value): Unit = set(3, value)
        get(): String = get(3) as String

    open var createdAt: Instant
        set(value): Unit = set(4, value)
        get(): Instant = get(4) as Instant

    open var updatedAt: Instant
        set(value): Unit = set(5, value)
        get(): Instant = get(5) as Instant

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised GeocoderSolverRequestRecord
     */
    constructor(requestKey: UUID, problemId: Long, solver: String, status: String, createdAt: Instant, updatedAt: Instant): this() {
        this.requestKey = requestKey
        this.problemId = problemId
        this.solver = solver
        this.status = status
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetChangedOnNotNull()
    }
}
