/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.keys


import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.generated.tables.*
import org.jooq.generated.tables.records.*
import org.jooq.impl.DSL
import org.jooq.impl.Internal


// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val FLYWAY_SCHEMA_HISTORY_PK: UniqueKey<FlywaySchemaHistoryRecord> = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), arrayOf(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK), true)
val GEOCODER_PROBLEM_PKEY: UniqueKey<GeocoderProblemRecord> = Internal.createUniqueKey(GeocoderProblem.GEOCODER_PROBLEM, DSL.name("geocoder_problem_pkey"), arrayOf(GeocoderProblem.GEOCODER_PROBLEM.ID), true)
val GEOCODER_SOLUTION_PKEY: UniqueKey<GeocoderSolutionRecord> = Internal.createUniqueKey(GeocoderSolution.GEOCODER_SOLUTION, DSL.name("geocoder_solution_pkey"), arrayOf(GeocoderSolution.GEOCODER_SOLUTION.GEOCODER_PROBLEM_ID), true)
val GEOCODER_SOLUTION_REQUEST_PKEY: UniqueKey<GeocoderSolutionRequestRecord> = Internal.createUniqueKey(GeocoderSolutionRequest.GEOCODER_SOLUTION_REQUEST, DSL.name("geocoder_solution_request_pkey"), arrayOf(GeocoderSolutionRequest.GEOCODER_SOLUTION_REQUEST.ID), true)
val GEOCODER_SOLVER_REQUEST_PKEY: UniqueKey<GeocoderSolverRequestRecord> = Internal.createUniqueKey(GeocoderSolverRequest.GEOCODER_SOLVER_REQUEST, DSL.name("geocoder_solver_request_pkey"), arrayOf(GeocoderSolverRequest.GEOCODER_SOLVER_REQUEST.REQUEST_KEY), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val GEOCODER_SOLUTION__FK_GEOCODER_PROBLEM_ID: ForeignKey<GeocoderSolutionRecord, GeocoderProblemRecord> = Internal.createForeignKey(GeocoderSolution.GEOCODER_SOLUTION, DSL.name("fk_geocoder_problem_id"), arrayOf(GeocoderSolution.GEOCODER_SOLUTION.GEOCODER_PROBLEM_ID), org.jooq.generated.keys.GEOCODER_PROBLEM_PKEY, arrayOf(GeocoderProblem.GEOCODER_PROBLEM.ID), true)
val GEOCODER_SOLUTION_REQUEST__FK_PROBLEM_ID: ForeignKey<GeocoderSolutionRequestRecord, GeocoderProblemRecord> = Internal.createForeignKey(GeocoderSolutionRequest.GEOCODER_SOLUTION_REQUEST, DSL.name("fk_problem_id"), arrayOf(GeocoderSolutionRequest.GEOCODER_SOLUTION_REQUEST.PROBLEM_ID), org.jooq.generated.keys.GEOCODER_PROBLEM_PKEY, arrayOf(GeocoderProblem.GEOCODER_PROBLEM.ID), true)
val GEOCODER_SOLUTION_REQUEST__FK_SOLVER_REQUEST_KEY: ForeignKey<GeocoderSolutionRequestRecord, GeocoderSolverRequestRecord> = Internal.createForeignKey(GeocoderSolutionRequest.GEOCODER_SOLUTION_REQUEST, DSL.name("fk_solver_request_key"), arrayOf(GeocoderSolutionRequest.GEOCODER_SOLUTION_REQUEST.REQUEST_KEY), org.jooq.generated.keys.GEOCODER_SOLVER_REQUEST_PKEY, arrayOf(GeocoderSolverRequest.GEOCODER_SOLVER_REQUEST.REQUEST_KEY), true)
val GEOCODER_SOLVER_REQUEST__FK_PROBLEM_ID: ForeignKey<GeocoderSolverRequestRecord, GeocoderProblemRecord> = Internal.createForeignKey(GeocoderSolverRequest.GEOCODER_SOLVER_REQUEST, DSL.name("fk_problem_id"), arrayOf(GeocoderSolverRequest.GEOCODER_SOLVER_REQUEST.PROBLEM_ID), org.jooq.generated.keys.GEOCODER_PROBLEM_PKEY, arrayOf(GeocoderProblem.GEOCODER_PROBLEM.ID), true)
